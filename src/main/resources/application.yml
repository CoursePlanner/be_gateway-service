server:
  port: 9000
  servlet:
    context-path: "/api/gws"
#    session:
#      cookie:
        # This restricts cookie generated by this application
        # A cookie generated by this service will only be used
#        same-site: strict

org:
  course_planner:
    api-configs:
      timeouts:
        connection-timeout: "2000"
        read-timeout: "2000"
      authentication-service:
        host: "http://localhost:9001/api/authentication-service"
        endpoint-configs:
          login:
            endpoint: "/login"
            connection-timeout: ""
            read-timeout: ""
            method: "POST"
          validate:
            endpoint: "/validate"
            connection-timeout: ""
            read-timeout: ""
            method: "GET"
      user-service:
        host: "http://localhost:9002/api/user-service"
        endpoint-configs:
          retrieve:
            endpoint: "/retrieve"
            connection-timeout: 1000
            read-timeout: 3000
            method: "GET"
          create:
            endpoint: "/create"
            connection-timeout: ""
            read-timeout: ""
            method: "POST"
          update:
            endpoint: "/update"
            connection-timeout: ""
            read-timeout: ""
            method: "PUT"
          delete:
            endpoint: "/delete"
            connection-timeout: ""
            read-timeout: ""
            method: "DELETE"
      message-service:
        host: "http://localhost:9003/api/message-service"
        endpoint-configs:
          send-message:
            endpoint: "/sendMessage"
            connection-timeout: ""
            read-timeout: ""
            method: "POST"
          load-pending-messages:
            endpoint: "/loadPendingMessages"
            connection-timeout: ""
            read-timeout: ""
            method: "GET"
          delete-messages:
            endpoint: "/deleteMessages"
            connection-timeout: ""
            read-timeout: ""
            method: "GET"
      rabbit-mq-mgmt:
        host: "http://localhost:15672/api"
        endpoint-configs:
          queues:
            endpoint: "/queues?page=1&page_size=100&name=&use_regex=false&pagination=true"
            connection-timeout: ""
            read-timeout: ""
            method: "GET"

spring:
  application:
    name: gateway-service
#  main:
#    allow-bean-definition-overriding: true
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      # Used for identification of producer
      # Can also be used for metrics and logging purpose
      client-id: gws
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # Awaits metadata from Kafka server for the required topic
        max:
          block:
            ms: 2000
        # How long before considering a request failed
        request:
          timeout:
            ms: 500
        # How long should we wait for an acknowledgement from the server
        # This has to be more than the request timeout (inclusive of request timeout)
        delivery:
          timeout:
            ms: 800
        # How long will a connection remain idle
        connections:
          max:
            idle:
              ms: 5000

logging:
  level:
    root: ERROR
#    org.springframework.security: DEBUG
    org.course_planner: INFO

#resilience4j:
#  retry:
#    instances:
#      get-user-profile:
#        maxAttempts: 5
#        waitDuration: 1s
#        enableExponentialBackoff: true
#  circuitbreaker:
#    instances:
#      get-user-profile:
#        # % of failure
#        failureRateThreshold: 1
#  ratelimiter:
#    instances:
#      get-user-profile:
#        limitForPeriod: 2
#        limitRefreshPeriod: 10s
#    bulkhead:
#      instances:
#        get-user-profile:
#          maxConcurrentCalls: 2